{"components":[{"type":"grid","id":"container","columns":[{"span":12,"id":"r_erl8qs","components":[{"type":"textarea","id":"prompt","label":"prompt","placeholder":"prompt","isRequired":false,"showError":false,"value":"","min":0,"max":512,"hidden":false,"exclude":false,"invalid":false},{"type":"radio","id":"sync","label":"","isRequired":false,"showError":false,"value":"Sync","options":[{"value":"Sync","checked":true},{"value":"Async","checked":false}],"exclude":false,"invalid":false},{"type":"button","id":"send","text":"Send Request","invalid":false},{"type":"code","id":"res","label":"Response","isRequired":false,"showError":false,"value":"","exclude":false,"invalid":false}]}],"spanSum":12,"isResizable":false,"invalid":false}],"code":"from typing import List, Union\nimport requests\nimport requests.asyncs as requests_async\nfrom accessor import getValue,setValue\nimport json\nfrom environments import url\n\nasync def on_send_click(path: List[Union[str, int]]):\n    sync_mode = getValue(['sync'])\n    prompt = getValue(['prompt'])\n    requestBody = {\n        \"model\": 'gpt-3.5-turbo',\n        \"messages\": [{ \"role\": \"user\", \"content\": prompt }]\n    };\n    if (sync_mode == 'Sync'):\n        res = request_sync(url, requestBody)\n        setValue(['res'], json.dumps(res))\n    elif (sync_mode == 'Async'):\n        res = await request_async(url, requestBody)\n        setValue(['res'], json.dumps(res))\n    return\n\ndef on_sync_change(path: List[Union[str, int]], value):\n    setValue(['res'], '')\n\ndef request_sync(url, body):\n    response = requests.request(\n        url=url,\n        method =\"POST\",\n        json = body,\n        headers = None\n    )\n\n    ### Return response as a JSON object\n    return response.json()\n\nasync def request_async(url, body):\n    response = await requests.asyncs.request(\n        url=url,\n        method =\"POST\",\n        json = body,\n        headers = None\n    )\n\n    ### Return response as a JSON object\n    return response.json()","environments":[{"name":"url","value":"https://generative.superannotate.com/generate","secure":false}]}